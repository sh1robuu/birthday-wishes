* { box-sizing: border-box; }
:root {
  --bg1: #ffecd2; --bg2: #fcb69f; --accent: #ff6f61; --ink: #222; --muted: #555;
  --card: #ffffff; --ring: 0 10px 24px rgba(0,0,0,.16);
}
html, body { height: 100%; }
body {
  margin: 0;
  font-family: system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif;
  background: linear-gradient(135deg, var(--bg1), var(--bg2));
  color: var(--ink);
  overflow-x: hidden;
}
#fireworks {
  position: fixed; inset: 0; width: 100%; height: 100%;
  z-index: 0; pointer-events: none;
}
.wrap { max-width: 980px; margin: 0 auto; padding: 24px; position: relative; z-index: 1; }
.hero { text-align: center; padding: 52px 0 26px; }
.hero h1 { margin: 0 0 10px; font-size: clamp(2rem, 3vw, 2.6rem); }
.hero p { margin: 0 0 16px; color: var(--muted); }

.actions { display: flex; gap: 12px; justify-content: center; flex-wrap: wrap; }
.btn {
  border: none; padding: 12px 16px; border-radius: 14px; cursor: pointer; font-weight: 700;
  background: #ffffff; color: var(--ink); box-shadow: var(--ring);
  transition: transform .05s ease, filter .2s ease, box-shadow .2s ease;
}
.btn.primary { background: var(--accent); color: #fff; }
.btn:hover { filter: brightness(1.04); box-shadow: 0 14px 28px rgba(0,0,0,.20); }
.btn:active { transform: translateY(1px); }

main { display: grid; gap: 18px; }
.card {
  background: var(--card); border-radius: 18px; padding: 18px 20px; box-shadow: var(--ring);
  backdrop-filter: blur(6px);
}
.hidden { display: none; }

label { display: block; margin: 10px 0 6px; font-weight: 650; }
input, textarea {
  width: 100%; padding: 12px 14px; border-radius: 12px;
  border: 1px solid #e8e8e8; font: inherit; background: #fff;
}
textarea { min-height: 120px; resize: vertical; }
.form-row { display: flex; gap: 10px; margin-top: 12px; flex-wrap: wrap; }

.status { min-height: 22px; margin-top: 6px; color: #106d2e; }
.status.error { color: #b00020; }

.list { list-style: none; margin: 0; padding: 0; }
.wish {
  display: grid; gap: 6px; padding: 12px; border-radius: 14px;
  background: #fafafa; margin-bottom: 12px;
  border: 1px solid #eee; animation: pop .2s ease;
}
.wish .meta {
  font-size: .9rem; color: var(--muted); display: flex; gap: 8px;
  align-items: center; flex-wrap: wrap;
}
.wish .msg { white-space: pre-wrap; line-height: 1.5; font-size: 1rem; }

.empty { text-align: center; color: var(--muted); padding: 18px; }
footer { text-align: center; color: #555; padding: 18px 0; }

.feed-header { display: flex; align-items: center; justify-content: space-between; gap: 10px; flex-wrap: wrap; }
.filters { display: flex; gap: 8px; }
.chip {
  border: 1px solid #ddd; background: #fff; border-radius: 999px;
  padding: 6px 12px; cursor: pointer; font-weight: 600;
}
.chip-active { border-color: var(--accent); color: var(--accent); }

/* Stickers */
.sticker {
  position: fixed; z-index: 1; opacity: .95;
  filter: drop-shadow(0 10px 16px rgba(0,0,0,.18));
  pointer-events: none; animation: float 10s ease-in-out infinite;
}
.s1 { width: 120px; left: 4%; top: 8%; animation-delay: .2s; }
.s2 { width: 120px; right: 6%; top: 12%; animation-delay: .8s; }
.s3 { width: 140px; left: 6%; bottom: 6%; animation-delay: 1.2s; }
.s4 { width: 160px; right: 4%; bottom: 6%; animation-delay: 1.6s; }

/* Animations */
@keyframes float { 0%,100%{ transform: translateY(0) } 50%{ transform: translateY(-10px) } }
@keyframes pop { from { transform: scale(.98); opacity: .5 } to { transform: scale(1); opacity: 1 } }
.fade-in { animation: fade .5s ease-out both; }
@keyframes fade { from { opacity: 0; transform: translateY(8px) } to { opacity: 1; transform: translateY(0) } }
.slide-up { animation: up .4s ease-out both; }
@keyframes up { from { opacity: 0; transform: translateY(10px) } to { opacity: 1; transform: translateY(0) } }
/* Rising balloons spawned by JS (no pointer events) */
.float-balloon {
  position: fixed;
  bottom: -120px;           /* start off-screen */
  transform: translateX(0) translateY(0);
  opacity: 0.0;
  z-index: 2;               /* trên fireworks canvas, dưới nội dung chính là z-index:1; */
  pointer-events: none;
  filter: drop-shadow(0 10px 16px rgba(0,0,0,.18));
  animation-name: riseBalloon;
  animation-timing-function: ease-in;
  animation-fill-mode: forwards; /* giữ trạng thái kết thúc (đã biến mất) */
}

@keyframes riseBalloon {
  0%   { transform: translateY(20px); opacity: 0; }
  8%   { opacity: 1; }
  85%  { opacity: 0.95; transform: translateY(-85vh) translateX(var(--drift, 0px)); }
  100% { opacity: 0; transform: translateY(-100vh) translateX(var(--drift, 0px)); }
}
/* Random-color balloons with string + sway */
.float-balloon {
  position: fixed;
  bottom: -120px;
  border-radius: 50% 50% 45% 55% / 55% 45% 55% 45%;
  opacity: 0;
  z-index: 2;
  pointer-events: none;
  box-shadow: inset -6px -12px rgba(0,0,0,0.1);
  /* 2 animations: rise (uses variables) + horizontal sway via CSS variable */
  animation:
    riseBalloon var(--dur, 5s) ease-in forwards,
    swayBalloon calc(var(--dur, 5s) * 0.9) ease-in-out 0s infinite alternate;
}

/* string below balloon, with gentle wiggle */
.float-balloon::after {
  content: "";
  position: absolute;
  left: 50%;
  top: 100%;
  width: 2px;
  height: 40px;
  margin-left: -1px;
  background: rgba(0,0,0,0.25);
  border-radius: 1px;
  transform-origin: top center;
  animation: wiggleString calc(var(--dur, 5s) * 0.9) ease-in-out 0s infinite alternate;
}

@keyframes riseBalloon {
  /* use --drift (overall) + --swayOffset (animated) for total horizontal move */
  0%   { transform: translateY(20px) translateX(0); opacity: 0; }
  8%   { opacity: 1; }
  70%  { opacity: 0.9; }
  85%  { opacity: 0.6; transform: translateY(-85vh) translateX(calc(var(--drift, 0px) + var(--swayOffset, 0px))); }
  100% { opacity: 0;   transform: translateY(-100vh) translateX(calc(var(--drift, 0px) + var(--swayOffset, 0px))); }
}

/* Animate a CSS variable --swayOffset so we don't clash with riseBalloon's transform */
@keyframes swayBalloon {
  0%   { --swayOffset: calc(var(--sway, 6px) * -1); }
  50%  { --swayOffset: 0px; }
  100% { --swayOffset: var(--sway, 6px); }
}

/* Gentle wiggle on the string */
@keyframes wiggleString {
  0%   { transform: rotate(-6deg); }
  50%  { transform: rotate(0deg); }
  100% { transform: rotate(6deg); }
}